<table>
  <thead>
  <tr>
    <th>ID</th>
    <th>Name</th>
    <th>Surname</th>
    <th>Roles</th>
  </tr>
  </thead>
  <tbody>
  <tr th:each="user : ${users}">
    <td th:text="${user.id}"></td>
    <td th:text="${user.name}"></td>
    <td th:text="${user.surname}"></td>
    <td>
      <span th:each="role : ${user.roles}" th:text="${role.name}"></span>
    </td>
  </tr>
  </tbody>
</table>

     для отображения ошибок
<form th:action="@{/user}" method="post">
  <input type="text" th:field="*{email}" placeholder="Enter email" />
  <div th:if="${#fields.hasErrors('email')}" th:errors="*{email}">Invalid email</div>
  <button type="submit">Submit</button>
</form>


@Controller
public class UserController {

@PostMapping("/user")
public String addUser(@Valid User user, BindingResult result) {
if (result.hasErrors()) {
// Если есть ошибки валидации, отобразите страницу с ошибками
return "userForm";
}

// Если ошибок нет, сохранить пользователя
userRepository.save(user);
return "redirect:/users";
}
}

шаблон без колонки пароля
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
  <title>User List</title>
</head>
<body>
<h1>User List</h1>
<table border="1">
  <thead>
  <tr>
    <th>ID</th>
    <th>First Name</th>
    <th>Last Name</th>
    <th>Age</th>
    <th>Email</th>
    <th>Role</th>
  </tr>
  </thead>
  <tbody>
  <tr th:each="user : ${users}">
    <td th:text="${user.id}"></td>
    <td th:text="${user.name}"></td>
    <td th:text="${user.surname}"></td>
    <td th:text="${user.age}"></td>
    <td th:text="${user.email}"></td>
    <!-- Здесь выводим роли -->
    <td th:text="${user.rolesAsString}"></td>
  </tr>
  </tbody>
</table>
</body>
</html>

@Override
public void deleteUserByEmail(String email) {
    User user = userRepository.findByEmailIgnoreCase(email).orElseThrow(() ->
        new IllegalArgumentException("User with such email doesn't exist.")
    );
    userRepository.delete(user);
}